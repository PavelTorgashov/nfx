<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NFX.MsSQL</name>
    </assembly>
    <members>
        <member name="T:NFX.DataAccess.MsSQL.MsSQLDataAccessException">
            <summary>
            Thrown by Microsoft SQL server data access classes
            </summary>
        </member>
        <member name="T:NFX.DataAccess.MsSQL.MsSQLDataStoreBase">
            <summary>
            Implements Ms SQL server store base functionality
            </summary>
        </member>
        <member name="M:NFX.DataAccess.MsSQL.MsSQLDataStoreBase.ExternalParametersForGroups(System.String[])">
            <summary>
            Returns named parameters that can be used to control this component
            </summary>
        </member>
        <member name="M:NFX.DataAccess.MsSQL.MsSQLDataStoreBase.ExternalGetParameter(System.String,System.Object@,System.String[])">
            <summary>
            Gets external parameter value returning true if parameter was found
            </summary>
        </member>
        <member name="M:NFX.DataAccess.MsSQL.MsSQLDataStoreBase.ExternalSetParameter(System.String,System.Object,System.String[])">
            <summary>
            Sets external parameter value returning true if parameter was found and set
            </summary>
        </member>
        <member name="M:NFX.DataAccess.MsSQL.MsSQLDataStoreBase.GetConnection">
            <summary>
            Allocates Ms SQL Server connection
            </summary>
        </member>
        <member name="P:NFX.DataAccess.MsSQL.MsSQLDataStoreBase.ExternalParameters">
            <summary>
            Returns named parameters that can be used to control this component
            </summary>
        </member>
        <member name="P:NFX.DataAccess.MsSQL.MsSQLDataStoreBase.ConnectString">
            <summary>
            Get/Sets MsSql database connection string
            </summary>
        </member>
        <member name="T:NFX.Log.Destinations.SQLServerDestination">
            <summary>
            Provides SQL Server storage log destination functionality
            </summary>
        </member>
        <member name="P:NFX.Log.Destinations.SQLServerDestination.ConnectString">
            <summary>
            Sql Connection String
            </summary>
        </member>
        <member name="T:NFX.RecordModel.DataAccess.MsSQL.MsSQLModelDataStore">
            <summary>
            Implements MsSQL general data store that always generates SQL statements automatically regardless of model type.
            This class IS thread-safe load/save/delete operations
            </summary>
        </member>
        <member name="M:NFX.RecordModel.DataAccess.MsSQL.MsSQLModelDataStore.#ctor">
            <summary>
            Allocates MsSQL general data store that always generates SQL statements automatically regardless of model type.
            This class IS thread-safe load/save/delete operations
            </summary>
        </member>
        <member name="M:NFX.RecordModel.DataAccess.MsSQL.MsSQLModelDataStore.#ctor(System.String)">
            <summary>
            Allocates MsSQL general data store that always generates SQL statements automatically regardless of model type.
            This class IS thread-safe load/save/delete operations
            </summary>
        </member>
        <member name="M:NFX.RecordModel.DataAccess.MsSQL.MsSQLModelDataStore.DoLoad(System.Data.SqlClient.SqlConnection,NFX.RecordModel.ModelBase,NFX.DataAccess.IDataStoreKey,System.Object[])">
            <summary>
            Performs model load from SQL server by generating appropriate SQL statement automatically
            </summary>
        </member>
        <member name="M:NFX.RecordModel.DataAccess.MsSQL.MsSQLModelDataStore.DoSave(System.Data.SqlClient.SqlConnection,NFX.RecordModel.ModelBase,NFX.DataAccess.IDataStoreKey,System.Object[])">
            <summary>
            Performs model save into SQL server by generating appropriate SQL statement automatically
            </summary>
        </member>
        <member name="M:NFX.RecordModel.DataAccess.MsSQL.MsSQLModelDataStore.DoDelete(System.Data.SqlClient.SqlConnection,NFX.RecordModel.ModelBase,NFX.DataAccess.IDataStoreKey,System.Object[])">
            <summary>
            Performs delete per model instance  from SQL server by generating appropriate SQL statement automatically
            </summary>
        </member>
        <member name="T:NFX.RecordModel.DataAccess.MsSQL.MsSQLStatementGenerator">
            <summary>
            This helper class generates table SELECT/INSERT/UPDATE/DELETE statements for MS SQL server (2000 or higher)
            depending on model state (last posted operation , key, etc).
            All values are emitted as parameters.
            This class respects two key types: CounterDataStoreKey and NameValueDataStoreKey
             depending on what key type was passed corresponding WHERE clause is generated 
            </summary>
        </member>
        <member name="M:NFX.RecordModel.DataAccess.MsSQL.MsSQLStatementGenerator.Load(System.Data.SqlClient.SqlConnection,System.String,NFX.RecordModel.ModelBase,NFX.DataAccess.IDataStoreKey,System.Object[])">
            <summary>
            Auto generates select sql and params. If sqlStatement!=null then params are added to that statement
            </summary>
        </member>
        <member name="T:NFX.MsSQL.StringConsts">
            <summary>
            A dictionary of framework text messages.
            Localization may be done in this class in future
            </summary>
        </member>
        <member name="T:NFX.ApplicationModel.Volatile.MsSQLObjectStoreProvider">
            <summary>
            Provider that stores objects in Microsoft SQL Server database
            </summary>
        </member>
        <member name="P:NFX.ApplicationModel.Volatile.MsSQLObjectStoreProvider.LoadLimit">
            <summary>
            Imposes the limit on number of bytes that can be read from database on load all.
            Once limit is exceeded the rest of objects will not load.
            Provider loads most recent objects first
            </summary>
        </member>
        <member name="P:NFX.ApplicationModel.Volatile.MsSQLObjectStoreProvider.PurgeAfterDays">
            <summary>
            Specifies after how many days objects get deleted from SQL database
            </summary>
        </member>
        <member name="P:NFX.ApplicationModel.Volatile.MsSQLObjectStoreProvider.LoadSize">
            <summary>
            Returns how many bytes have been loaded from the database
            </summary>
        </member>
        <member name="P:NFX.ApplicationModel.Volatile.MsSQLObjectStoreProvider.ConnectString">
            <summary>
            Gets/sets the connect string for database where objecs are stored
            </summary>
        </member>
    </members>
</doc>
